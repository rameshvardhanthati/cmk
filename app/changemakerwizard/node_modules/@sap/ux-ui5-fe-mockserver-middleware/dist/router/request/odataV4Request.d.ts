import { ODataRequest, DataQuery } from './odataRequest';
import { SimpleResponse } from '../batch/http/simpleHttpResponse';
import { ODataMetadata } from '../data/metadata';
/**
 *
 */
export declare class ODataV4Request extends ODataRequest {
    context: string;
    dataLength: number;
    location: string;
    /**
     * @param baseUrl
     * @param url
     * @param metadata
     */
    constructor(baseUrl: string, url: string, metadata: ODataMetadata);
    /**
     * @param testStr
     * @param char
     */
    countCharInString(testStr: string, char: string): number;
    /**
     * Comma separate list of properties that can contain sub-requests are split into an array.
     *
     * @param propertiesQuery OData properties request
     */
    protected splitProperties(propertiesQuery: string): string[];
    /**
     * @param expandParameters
     */
    protected parseExpand(expandParameters: string): Partial<DataQuery>;
    /**
     * @param entity
     * @param element
     */
    protected enrichElement(entity: string, element: object): void;
    /**
     * @param data
     * @param bCreated
     * @param key
     */
    createResponse(data: any, bCreated?: boolean, key?: string): SimpleResponse;
    /**
     * @param data
     */
    protected toJSON(data: object | object[]): string;
}
