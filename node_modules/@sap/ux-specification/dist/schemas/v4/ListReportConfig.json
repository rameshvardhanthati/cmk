{
  "type": "object",
  "properties": {
    "table": {
      "$ref": "#/definitions/Table"
    },
    "variantManagement": {
      "$ref": "#/definitions/VariantManagementTypeListReport",
      "description": "variantManagement defines how the variant management of page personalizations is controlled.\n- None - No variant management by default.\n- Control - Individual personalizations for each control.",
      "artifactType": "Manifest"
    },
    "filterBar": {
      "$ref": "#/definitions/FilterBar"
    },
    "$schema": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Table": {
      "description": "Table",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "initialLoad": {
          "$ref": "#/definitions/InitialLoadType",
          "description": "initialLoad defines whether or not the data in the table is automatically loaded.\n- Disabled - Data is never loaded when opening the app without an app state.\n- Enabled - Data is always loaded when opening the app.\n- Auto - Data is only loaded, if initial/preset filters are available (e.g. defined by \"SelectionVariant\" definition, URL parameters or user defaults).",
          "artifactType": "Manifest"
        },
        "views": {
          "$ref": "#/definitions/MultiTableModeV4",
          "description": "With the views property you can switch on the multiple view feature. Contrary to quickVariantSelection, each view will be rendered in a different instance of table). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ToolBar",
          "description": "Tool Bar"
        },
        "type": {
          "$ref": "#/definitions/TableTypeV4",
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "artifactType": "Manifest"
        },
        "creationMode": {
          "$ref": "#/definitions/TableCreationMode",
          "description": "Defines the page behavior when a new record is created.",
          "artifactType": "Manifest"
        },
        "personalization": {
          "$ref": "#/definitions/PersonalizationType",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          "artifactType": "Manifest"
        },
        "selectionMode": {
          "$ref": "#/definitions/SelectionMode",
          "description": "Applications can influence whether the table rows are selectable or not, and whether it allows for single selection or multiple selection. It can take the following values:\n- \"Auto\": This is the default value. In this mode, Fiori Elements first checks if there are any custom actions or IBN buttons in the table toolbar that require a context. If no such buttons are found, then no table selection is allowed in display mode. In edit mode too a selection is not allowed unless there is a Delete button in the table toolbar in which case multiple row selection will be allowed.\n- \"Multi\": This will allow end users to select multiple table records (in both display and edit mode)\n- \"Single\" This will allow end user to select only a single table record (in both display and edit mode)\n- \"None\": This will not allow the end user to select any table record in display mode. This will also be the case in edit mode unless the table has a delete button enabled, in which multiple selection is allowed in delete mode.",
          "artifactType": "Manifest"
        },
        "selectAll": {
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "With the selectionLimit you can define how many items can be selected at a time,",
          "type": "number",
          "artifactType": "Manifest"
        },
        "enableExport": {
          "description": "The exporting of the table to an Excel file is enabled in List Report tables by default. In Object Page, the export to Excel is available by default if the copy/paste feature is also available; otherwise it is disabled.\nTo disable the export in List Report or to enable it in Object Page, use the \"enableExport\" property and set it to false or true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionV4",
          "description": "With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.",
          "artifactType": "Manifest"
        },
        "condensedTableLayout": {
          "description": "You can set the content density to condensed for ui.table on the list report and object page applications.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns"
        }
      },
      "additionalProperties": false
    },
    "InitialLoadType": {
      "enum": [
        "Auto",
        "Disabled",
        "Enabled"
      ],
      "type": "string"
    },
    "MultiTableModeV4": {
      "type": "object",
      "properties": {
        "paths": {
          "description": "List of annotation paths referring to SelectionVariant annotations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotationPathWithKey"
          },
          "artifactType": "Manifest"
        },
        "showCounts": {
          "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "paths"
      ]
    },
    "AnnotationPathWithKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "annotationPath": {
          "type": "string"
        },
        "entitySet": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath",
        "key"
      ]
    },
    "ToolBar": {
      "description": "Toolbar",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "additionalProperties": false,
      "required": [
        "actions"
      ]
    },
    "Actions": {
      "description": "Actions",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ToolBarAction"
      }
    },
    "ToolBarAction": {
      "description": "Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "enableOnSelect": {
          "$ref": "#/definitions/SelectType",
          "description": "Enables single selection for a bound action",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "SelectType": {
      "enum": [
        "multi",
        "single"
      ],
      "type": "string"
    },
    "TableTypeV4": {
      "enum": [
        "AnalyticalTable",
        "GridTable",
        "ResponsiveTable"
      ],
      "type": "string"
    },
    "TableCreationMode": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/TableCreationModeType",
          "description": "The name property of TableCreationMode defines the creation mode; possible values are:\n- NewPage: The create action leads to a new page.\n- Inline: The create action leads to a new row at the table.\n- CreationRow: No create button will be rendered, an empty row is directly given.\nThe default is \"NewPage\".",
          "artifactType": "Manifest"
        },
        "createAtEnd": {
          "description": "In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \"true\"",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "TableCreationModeType": {
      "enum": [
        "CreationRow",
        "Inline",
        "NewPage"
      ],
      "type": "string"
    },
    "PersonalizationType": {
      "type": "object",
      "properties": {
        "column": {
          "description": "Defines whether the user can add and remove columns to a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "sort": {
          "description": "Defines whether the user can sort a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "filter": {
          "description": "Defines whether the user can filter data of a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "SelectionMode": {
      "enum": [
        "Auto",
        "Multi",
        "None",
        "Single"
      ],
      "type": "string"
    },
    "QuickVariantSelectionV4": {
      "type": "object",
      "properties": {
        "paths": {
          "description": "List of annotation paths referring to SelectionVariant annotations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotationPathAsObject"
          },
          "artifactType": "Manifest"
        },
        "hideTableTitle": {
          "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "showCounts": {
          "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "paths"
      ]
    },
    "AnnotationPathAsObject": {
      "type": "object",
      "properties": {
        "annotationPath": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath"
      ]
    },
    "GenericColumns": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "description": "Table Column",
            "isViewNode": true,
            "type": "object",
            "properties": {
              "width": {
                "description": "A string type that represents CSS size values.\nRefer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.",
                "type": "string"
              },
              "availability": {
                "$ref": "#/definitions/Availability",
                "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation."
              },
              "afterExecution": {
                "$ref": "#/definitions/ActionAfterExecutionConfiguration",
                "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Custom Columns",
            "isViewNode": true,
            "type": "array",
            "items": {
              "description": "Custom Column",
              "isViewNode": true,
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "position": {
                  "description": "Defines the position of the column relative to other columns.",
                  "type": "object",
                  "properties": {
                    "anchor": {
                      "description": "The key of another column to be used as placement anchor.",
                      "type": "string"
                    },
                    "placement": {
                      "$ref": "#/definitions/Placement",
                      "description": "Define the placement, either before or after the anchor column."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "placement"
                  ]
                },
                "header": {
                  "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
                  "type": "string"
                },
                "width": {
                  "description": "A string type that represents CSS size values.\nRefer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.",
                  "type": "string"
                },
                "template": {
                  "description": "Relevant for extension columns; allows the definition of a target fragment.",
                  "type": "string"
                }
              },
              "required": [
                "header"
              ]
            }
          }
        ]
      }
    },
    "Availability": {
      "enum": [
        "Adaptation",
        "Default",
        "Hidden"
      ],
      "type": "string"
    },
    "ActionAfterExecutionConfiguration": {
      "type": "object",
      "properties": {
        "navigateToInstance": {
          "description": "By default, a navigation is automatically triggered after an action execution. If applications want to disable the navigation, they can do so using the manifest setting “navigateToInstance”.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enableAutoScroll": {
          "description": "The \"enableAutoScroll\" allows you to scroll to the newly created or change item after execution of an action",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "Placement": {
      "enum": [
        "After",
        "Before",
        "End"
      ],
      "type": "string"
    },
    "VariantManagementTypeListReport": {
      "enum": [
        "Control",
        "None",
        "Page"
      ],
      "type": "string"
    },
    "FilterBar": {
      "description": "Filter Bar",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "selectionFields": {
          "$ref": "#/definitions/SelectionFields"
        }
      },
      "additionalProperties": false
    },
    "SelectionFields": {
      "description": "Filter Fields",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}