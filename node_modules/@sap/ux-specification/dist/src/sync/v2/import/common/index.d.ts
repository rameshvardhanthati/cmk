import { ListReportConfig, AnalyticalListPageConfig } from '../../../../specification/v2/pages';
import { Manifest } from '../../../../specification/common/webapp/manifest/Manifest';
import { TableTypeV2 } from '../../../../specification/v2';
import { ExtensionLogger } from '../../../../apiTypes';
export declare function convertSelector(selectorId: string): string;
export declare function addFlex(config: ListReportConfig | AnalyticalListPageConfig, changeString: string, jsonSchema: object, logger?: ExtensionLogger): void;
/**
 * Transfers settings from manifest to object page config
 * @param configPart - part of the configuration to be filled
 * @param manifest - manifest.json of the app
 * @param appSchema - app specific schema
 * @param pageID - ID of the given object page
 * @param sectionId (optional) - ID of the given section (optional)
 * @param {ExtensionLogger} logger - Logger class for logging messages
 */
export declare function transferSettingsOfObject(configPart: {
    [key: string]: any;
}, manifest: Manifest, appSchema: object, pageKey: string, logger?: ExtensionLogger, kpiKey?: string): void;
/**
 * Determines the table type for a given LR or ALP table, based on the component name and its table settings
 * This does not exactly reflect the run time behaviour of Fiori elements but a best guess and expectation.
 * @param manifest - manifest.json file content of the app
 * @param pageKey - key of the page in the manifest
 */
export declare function determineTableType(manifest: Manifest, pageKey: string): TableTypeV2;
