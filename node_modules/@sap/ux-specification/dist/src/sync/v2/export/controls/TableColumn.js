"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("../../../common/types");
const decoration_1 = require("../../../common/decoration");
const common_1 = require("../../../common");
class TableColumn {
}
__decorate([
    decoration_1.syncRule({
        flex: {
            controlId: decoration_1.buildColumnControlId,
            controlType: () => types_1.ControlType.TableColumn,
            createFlexChange: decoration_1.exportToFlexChange
        }
    })
], TableColumn.prototype, "width", void 0);
__decorate([
    decoration_1.syncRule({
        flex: {
            controlId: decoration_1.buildColumnControlId,
            controlType: () => types_1.ControlType.TableColumn,
            createFlexChange: decoration_1.exportToFlexChange
        },
        generate: common_1.addPatternForBindingChangeOfEnumLR
    })
], TableColumn.prototype, "hAlign", void 0);
exports.TableColumn = TableColumn;
/**
 * No sync rules are defined for table custom columns, as they are transfered altogether, by functuion exportToFragment.
 * This approach is needed to support inserts as well as deletions of manifest extensions and fragments
 */
class TableCustomColumn {
}
exports.TableCustomColumn = TableCustomColumn;
//# sourceMappingURL=TableColumn.js.map