import { FileData } from '../../common/types';
import { ExtensionLogger } from '../../../apiTypes';
/**
 * Generates the app specific schema of an object page out of the generic schema for the same page.
 * Generic types are replaced by information from the app specific annotations.
 *
 * @param genericSchema - generic JSON schema of a list report
 * @param entitySetName - the base entity set of the given page
 * @param annotations - list of all annotation files (file content plus URI as identifier)
 * @param manifest - manifest.json of the app
 * @param {ExtensionLogger} logger - Logger class for logging messages
 *
 * @returns the app specific JSON schema
 */
export declare function generateObjectPageInterfaceV4(genericSchema: object, entitySet: string, annotations: FileData[], manifest: object, logger?: ExtensionLogger): object;
/**
 * Generates the app specific schema of a list report out of the generic schema.
 * Generic types are replaced by information from the app specific annotations.
 *
 * @param genericSchema - generic JSON schema of a list report
 * @param entitySetName - the base entity set of the given page
 * @param annotations - list of all annotation files (file content plus URI as identifier)
 * @param {ExtensionLogger} logger - Logger class for logging messages
 *
 * @returns the app specific JSON schema
 */
export declare function generateListReportInterfaceV4(genericSchema: object, entitySetName: string, annotations: FileData[], logger?: ExtensionLogger): object;
