import { Table as TableConfig, TableTypeV4, TableCreationModeType, SelectionMode, InitialLoadType, AnnotationPathAsObject, AnnotationPathWithKey } from '../../../../specification/v4';
export declare function exportCreationModeName(manifestSection: unknown, configObject: unknown, key: string, manifestKey: string): void;
export declare function exportPersonalizationProperty(manifestSection: unknown, configObject: unknown, key: string, manifestKey: string): void;
export declare function deleteCreationModeName(manifestSection: unknown, manifestKey: string): void;
export declare function deletePersonalizationProperty(manifestSection: unknown, manifestKey: string): void;
export declare function exportCreationModeCreateAtEnd(manifestSection: unknown, configObject: unknown, key: string, manifestKey: string): void;
export declare function deleteCreationModeCreateAtEnd(manifestSection: unknown, manifestKey: string): void;
export declare class TableCreationMode {
    name?: TableCreationModeType;
    createAtEnd?: boolean;
}
export declare class PersonalizationType {
    column?: boolean;
    sort?: boolean;
    filter?: boolean;
}
export declare class QuickVariantSelectionV4 {
    paths: AnnotationPathAsObject[];
    hideTableTitle?: boolean;
    showCounts?: boolean;
}
export declare class MultiTableModeV4 {
    paths: AnnotationPathWithKey[];
    showCounts?: boolean;
}
export declare class Table implements TableConfig {
    type?: TableTypeV4;
    creationMode?: TableCreationMode;
    personalization?: PersonalizationType;
    selectionMode?: SelectionMode;
    selectAll?: boolean;
    selectionLimit?: number;
    enableExport?: boolean;
    condensedTableLayout?: boolean;
    quickVariantSelection?: QuickVariantSelectionV4;
    views?: MultiTableModeV4;
    initialLoad?: InitialLoadType;
}
