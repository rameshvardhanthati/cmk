import { DeprecatedProperties, SyncRule } from '../';
import { ExtensionLogger } from '../../../apiTypes';
/**
 * Transfers the value of a single manifest setting to the config
 * @param syncRule - Metadata rule
 * @param manifestSection - Section in manifest.json
 * @param propertyKey - Key of the property or setting
 * @param configPart - Part of the config JSON
 * @param sectionId - Section or facet ID
 */
export declare function importProperty(syncRule: SyncRule, manifestSection: {}, propertyKey: string, configPart: {
    [key: string]: any;
}, sectionId?: string): void;
/**
 * Validation during import: check if properties are marked as deprecated.
 * If so, log them.
 * @param deprecatedProperties - existing list, to be actualized
 * @param manifestSection - Section in manifest.json
 * @param path - path to the section in manifest
 * @param {ExtensionLogger} logger - Logger class for logging messages
 */
export declare function checkDeprecatedProperties(deprecatedProperties: DeprecatedProperties[], manifestSection: {}, path: string, logger?: ExtensionLogger): void;
/**
 * get title of the section (Facet ID)
 * @param schemaSection - Section in manifest.json
 * @param jsonSchema - app specific schema
 */
export declare function getSectionTitle(schemaSection: object, jsonSchema: object): string;
